
export SSH_AUTH_SOCK=${HOME}/.gnupg/S.gpg-agent.ssh

# Work
{{ if contains "vts" .chezmoi.hostname }}
export PG_LOCAL={{ gopass "vts/pg/local" }}
export AWS_PROFILE=vts
export CIRCLE_TOKEN={{ gopass "vts/circleci/token" }}
export NODE_ENV='local'
export APP_ENV='local'
export DISABLE_KAFKA=true
export CC=/usr/bin/clang
export CXX=/usr/bin/clang++
export ANDROID_SDK_ROOT=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_SDK_ROOT/emulator
export PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools
{{ end }}

{{ if eq .chezmoi.os "darwin" }}
eval "$(/opt/homebrew/bin/brew shellenv)"

{{ else if contains "microsoft" .chezmoi.kernel.osrelease }}
${HOME}/.ssh/win-gpg-agent-relay.sh start
source $HOME/.nix-profile/etc/profile.d/nix.sh
source "$(nix-env -q --out-path --json fzf | jq -r '. | to_entries[] | .value.outputs.out')/share/fzf/key-bindings.zsh"
export LOCALE_ARCHIVE_2_27="$(nix-build --no-out-link "<nixpkgs>" -A glibcLocales)/lib/locale/locale-archive"
export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2; exit;}'):0.0

{{ end }}


# Encryption Check
card | ag --nocolor -o 'rsa4096/FD79F7B533DEACFB'

# Secrets
export BW_SESSION={{ gopass "bitwarden/session" }}
export GITHUB_TOKEN={{ gopass "github/token/cli" }}

# Path
export VOLTA_HOME=$HOME/.volta
export GOPATH="$HOME/.go"
export PATH="$PATH:$HOME/.bin"
export PATH="$PATH:$HOME/.local/bin"
export PATH="$PATH:/usr/local/go/bin"
export PATH="$PATH:$VOLTA_HOME/bin"

# Source
plugins=(git npm aws)
autoload -U +X bashcompinit && bashcompinit
bindkey "^[[3~" delete-char

source ~/.antidote/antidote.zsh
source ~/.zsh_plugins.zsh

# Variables
export LANG='en_US.utf8'
export VISUAL='nvim'
export EDITOR="$VISUAL"
export TZ_LIST='America/New_York,Office;Etc/UTC,Global'

# SPACESHIP_PACKAGE_SHOW=false
# SPACESHIP_DOCKER_SHOW=false
# SPACESHIP_VI_MODE_SHOW=false
# SPACESHIP_GIT_STATUS_PREFIX=" "
# SPACESHIP_GIT_STATUS_SUFFIX=""
# SPACESHIP_GIT_STATUS_COLOR="068"
# SPACESHIP_AWS_PREFIX=""
# SPACESHIP_AWS_SUFFIX=" "
# SPACESHIP_NODE_DEFAULT_VERSION=$(node --version)

export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

eval "$(starship init zsh)"
